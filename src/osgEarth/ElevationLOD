/* -*-c++-*- */
/* osgEarth - Dynamic map generation toolkit for OpenSceneGraph
 * Copyright 2008-2012 Pelican Mapping
 * http://osgearth.org
 *
 * osgEarth is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 */

#ifndef OSGEARTH_ELEVATIONLOD_H
#define OSGEARTH_ELEVATIONLOD_H 1

#include <osgEarth/Common>
#include <osgEarth/SpatialReference>
#include <osg/Group>

namespace osgEarth
{
    /**
     * Decorator node that will only display it's children when the camera is within a given elevation range
     */
    class OSGEARTH_EXPORT ElevationLOD : public osg::Group
    {
    public:
        ElevationLOD(const SpatialReference* srs);
        ElevationLOD(const SpatialReference* srs, double minElevation, double maxElevation);

        virtual ~ElevationLOD();

        double getMinElevation() const;
        void setMinElevation( double minElevation );

        double getMaxElevation() const;
        void setMaxElevation(double maxElevation );

        void setElevations( double minElevation, double maxElevation );

        virtual void traverse( osg::NodeVisitor& nv);       
               

    private:
        osg::ref_ptr< const SpatialReference > _srs;
        double _minElevation;
        double _maxElevation;
    };

} // namespace osgEarth

#endif // OSGEARTH_ELEVATIONLOD_H
